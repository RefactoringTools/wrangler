APPNAME = wrangler
include vsn.mk

ERL         = @ERL@
ERLC        = @ERLC@
prefix      = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
datadir     = @datadir@

ELISP_DIR = $(datadir)/wrangler/elisp
EBIN_DIR = $(datadir)/wrangler/ebin
BIN_DIR = $(datadir)/wrangler/bin
ERL_SRC_DIR = $(datadir)/wrangler/src
WRANGLER_DIR = $(datadir)/wrangler
PLT_DIR = $(datadir)/wrangler/plt
INCLUDE_DIR = $(datadir)/wrangler/include

DOC_OPTS={def,{version,\"$(VERSION)\"}}

########################################
## Main part

BUILD_FIRST = ebin/wrangler_parse.beam ebin/wrangler_expand_rule.beam ebin/api_refac.beam \
   ebin/wrangler_scan.beam ebin/wrangler_epp_dodger.beam ebin/wrangler_syntax.beam \
   ebin/wrangler_syntax_lib.beam ebin/wrangler_misc.beam ebin/api_ast_traverse.beam

ERL_SRC = $(wildcard src/*.erl)
ERL_OBJ = $(BUILD_FIRST) $(patsubst src/%.erl,ebin/%.beam,$(ERL_SRC))

ELISP_WRANGLER_OBJ = elisp/wrangler.el
INCLUDE_OBJ = include/wrangler_internal.hrl

OBJECTS = $(ERL_OBJ) $(ELISP_WRANGLER_OBJ) $(INCLUDE_OBJ)

default: prepare erl c

all: default docs

erl: $(ERL_OBJ)

########################################
## Rules

.SUFFIXES: .erl .yrl

## Erlang
ebin/%.beam: src/%.erl
	$(ERLC) -pa ebin -I include -W -o ebin +debug_info $<

ebin/%.beam: include/wrangler.hrl include/wrangler_internal.hrl

src/%.erl: src/%.yrl
	$(ERLC) -o src $<

## this is ugly code.
prepare:
	@case `uname` in \
          CYGWIN*) \
              sed -e "s;%WRANGLER_DIR%;\"`cygpath -m $(WRANGLER_DIR)`\";" \
                  include/wrangler_internal.hrl.src>include/wrangler_internal.hrl  \
              ;; \
              *) \
              sed -e "s;%WRANGLER_DIR%;\"$(WRANGLER_DIR)\";" \
                  include/wrangler_internal.hrl.src>include/wrangler_internal.hrl \
              ;; \
         esac
	@case `uname` in \
          CYGWIN*) \
              sed -e "s;%WRANGLER_DIR%;\"`cygpath -m $(WRANGLER_DIR)`\";" \
                  elisp/wrangler.el.src>elisp/wrangler.el  \
              ;; \
              *) \
              sed -e "s;%WRANGLER_DIR%;\"$(WRANGLER_DIR)\";" \
                  elisp/wrangler.el.src>elisp/wrangler.el \
             ;; \
         esac

c:
	@cd ./c_src; make; cd ../..

########################################


clean:
	@cd ./c_src; make clean; cd ../..
	@-rm -f $(OBJECTS) ebin/erl_parse.beam
	@-rm -f $(BIN_DIR)/*
	@-rm -f doc/*.html doc/edoc-info doc/erlang.png doc/stylesheet.css
	@-rm -f doc/*.erl

distclean: clean
	@-rm -f c_src/suffixtree/Makefile c_src/gsuffixtree/Makefile
	@-rm -f config.* configure.scan Makefile

install: default
	@echo "* Installing Emacs Lisp Library"
	install -m 775 -d $(ELISP_DIR)
	install -m 775 elisp/*.el $(ELISP_DIR)
	@echo
	@echo "* Installing Erlang Library"
	install -m 775 -d $(EBIN_DIR) $(ERL_SRC_DIR)
	install -m 775 -d $(BIN_DIR)
	install -m 775 -d $(PLT_DIR)
	install -m 775 -d $(INCLUDE_DIR)
	install -m 775 ebin/*.beam $(EBIN_DIR)
	install -m 775 src/*.erl $(ERL_SRC_DIR)
	install -m 775 ebin/*.app $(EBIN_DIR)
	install -m 775 c_src/suffixtree/suffixtree* $(BIN_DIR)
	install -m 755 c_src/gsuffixtree/gsuffixtree* $(BIN_DIR)
	install -m 775 include/*.hrl $(INCLUDE_DIR)
	install -m 775 plt/side_effect_plt $(PLT_DIR)
	install -m 775 plt/dialyzer_plt $(PLT_DIR)
	@echo
	@echo "*** Successfully installed. See README for usage instructions."
	@echo

wc:
	@echo "* Emacs Lisp"
	@wc -l */*.el | sort -nr
	@echo "* Erlang"
	@wc -l */*.erl | sort -nr
	@echo "* C"
	@wc -l */*.c | sort -nr


EXAMPLE_CODE = code_inspector_examples.erl refac_list.erl \
    refac_apply_to_remote_call.erl refac_remove_arg.erl \
    refac_batch_rename_fun.erl refac_remove_import.erl refac_intro_import.erl \
    refac_specialise.erl refac_keysearch_to_keyfind.erl refac_swap_args.erl

docs:
	$(ERL) -noshell -eval "edoc:application($(APPNAME), \".\", [$(DOC_OPTS)])" -s init stop
	(cd src ; cp $(EXAMPLE_CODE) ../doc/)

privdocs:
	$(MAKE) DOC_OPTS='$(DOC_OPTS)',private docs
